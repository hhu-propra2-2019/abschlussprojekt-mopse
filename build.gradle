plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '4.0.2'
    id 'io.franzbecker.gradle-lombok' version '3.3.0'
    id 'org.asciidoctor.jvm.convert' version '3.1.0'
}

group = 'mops'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
    maven {
        url = 'https://s3.cs.hhu.de/public/mops/'
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql:42.0.0'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.0.0'

    implementation 'mops:styleguide:2.2.0'
    implementation 'io.minio:minio:6.0.13'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.3.5'
    implementation 'org.keycloak:keycloak-spring-boot-starter:9.0.0'
    implementation 'org.keycloak.bom:keycloak-adapter-bom:9.0.0'
    implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.4.0.RELEASE'

    testImplementation 'com.tngtech.archunit:archunit-junit5:0.13.1'
    testImplementation 'org.testcontainers:testcontainers:1.13.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.13.0'
    testImplementation 'com.c4-soft.springaddons:spring-security-test-keycloack-addons:1.2.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

checkstyle {
    toolVersion = '8.30'
}
checkstyleTest.enabled = false
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    ruleSets = []
    ruleSetFiles = files 'config/pmd/pmd.xml'
}
pmdTest.enabled = false
tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task delombok(type: io.franzbecker.gradle.lombok.task.DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file "$buildDir/delombok"
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

ext {
    snippetsDir = file 'doc/api/generated-snippets'
}

javadoc {
    dependsOn delombok
    source = delombok.outputDir
    destinationDir = file "doc/javadoc"
    failOnError = false
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}
