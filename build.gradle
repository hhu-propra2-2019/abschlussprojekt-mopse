plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.spotbugs' version '4.0.0'
}

group = 'mops'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url = 'https://s3.cs.hhu.de/public/mops/'
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'mops:styleguide:2.0.0'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.0.0'
    testImplementation 'com.tngtech.archunit:archunit-junit5:0.13.1'
    implementation 'io.minio:minio:6.0.13'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.3.5'
    implementation 'org.keycloak:keycloak-spring-boot-starter:9.0.0'
    implementation 'org.keycloak.bom:keycloak-adapter-bom:3.3.0.Final'
}

checkstyle {
    toolVersion = '8.29'
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

pmd {
    ruleSets = []
    ruleSetFiles = files 'config/pmd/pmd.xml'
}
tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugs {
    toolVersion = '4.0.0'
}
check.dependsOn tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    useJUnitPlatform()
}
